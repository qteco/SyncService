// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SyncService.Data.DataContext;

#nullable disable

namespace SyncService.Data.Migrations.ClientSite
{
    [DbContext(typeof(ClientSiteContext))]
    partial class ClientSiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SyncService.Core.Classes.BusinessHour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientSiteId")
                        .HasColumnType("text");

                    b.Property<string>("Day")
                        .HasColumnType("text");

                    b.Property<string>("End")
                        .HasColumnType("text");

                    b.Property<string>("Start")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientSiteId");

                    b.ToTable("BusinessHours");
                });

            modelBuilder.Entity("SyncService.Core.Classes.ClientSite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<List<string>>("HolidayList")
                        .HasColumnType("text[]");

                    b.Property<string>("Line1")
                        .HasColumnType("text");

                    b.Property<string>("Line2")
                        .HasColumnType("text");

                    b.Property<string>("Line3")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("StateCode")
                        .HasColumnType("text");

                    b.Property<string>("TimezoneCode")
                        .HasColumnType("text");

                    b.Property<bool?>("Working24x7")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ClientSites");
                });

            modelBuilder.Entity("SyncService.Core.Classes.BusinessHour", b =>
                {
                    b.HasOne("SyncService.Core.Classes.ClientSite", "ClientSite")
                        .WithMany("BusinessHour")
                        .HasForeignKey("ClientSiteId");

                    b.Navigation("ClientSite");
                });

            modelBuilder.Entity("SyncService.Core.Classes.ClientSite", b =>
                {
                    b.Navigation("BusinessHour");
                });
#pragma warning restore 612, 618
        }
    }
}
